import { useParams } from 'react-router-dom';
import { useNavigate } from 'react-router-dom';
import StandardLayout from '@/components/layout/StandardLayout';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Calendar, Users, DollarSign, Heart, Clock, ChefHat } from 'lucide-react';

const MealPlanDetailPage = () => {
  const { id } = useParams();
  const navigate = useNavigate();

  // Mock authentication check - in real app this would come from auth context
  const isLoggedIn = false; // This would come from your auth state

  const handleApplyMealPlan = () => {
    if (!isLoggedIn) {
      // Redirect to login page if not logged in
      navigate('/login');
      return;
    }
    
    // Handle meal plan application logic here
    console.log('Applying meal plan...');
    // You can add toast notification or other feedback here
  };

  const mealPlan = {
    id: parseInt(id || '1'),
    title: "Th·ª±c ƒë∆°n 7 ng√†y cho b√† b·∫ßu",
    description: "Th·ª±c ƒë∆°n ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·∫∑c bi·ªát cho m·∫π b·∫ßu, b·ªï sung ƒë·∫ßy ƒë·ªß c√°c ch·∫•t dinh d∆∞·ª°ng c·∫ßn thi·∫øt cho s·ª± ph√°t tri·ªÉn c·ªßa b√© v√† s·ª©c kh·ªèe c·ªßa m·∫π. M·ªói b·ªØa ƒÉn ƒë·ªÅu ƒë∆∞·ª£c c√¢n b·∫±ng dinh d∆∞·ª°ng v√† d·ªÖ ti√™u h√≥a.",
    image: "https://images.unsplash.com/photo-1490645935967-10de6ba17061?w=800&h=400&fit=crop",
    duration: "7 ng√†y",
    servings: "1-2 ng∆∞·ªùi",
    budget: "800K/tu·∫ßn",
    difficulty: "Trung b√¨nh",
    rating: 4.8,
    meals: 21,
    tags: ["B√† b·∫ßu", "Dinh d∆∞·ª°ng", "S·ª©c kh·ªèe"],
    author: "Chuy√™n gia dinh d∆∞·ª°ng Nguy·ªÖn Th·ªã Mai",
    totalTime: "45 ph√∫t/ng√†y",
    benefits: [
      "Cung c·∫•p ƒë·∫ßy ƒë·ªß acid folic c·∫ßn thi·∫øt",
      "B·ªï sung canxi cho x∆∞∆°ng rƒÉng ch·∫Øc kh·ªèe",
      "Gi√†u s·∫Øt ngƒÉn ng·ª´a thi·∫øu m√°u",
      "D·ªÖ ti√™u h√≥a, kh√¥ng g√¢y bu·ªìn n√¥n"
    ],
    weeklyPlan: [
      {
        day: "Th·ª© 2",
        breakfast: "Ch√°o y·∫øn m·∫°ch chu·ªëi",
        lunch: "C∆°m g·∫°o l·ª©t + Canh chua c√° + Rau mu·ªëng x√†o t·ªèi",
        dinner: "Mi·∫øn g√† + Salad b∆° c√† chua"
      },
      {
        day: "Th·ª© 3", 
        breakfast: "B√°nh m√¨ nguy√™n c√°m + S·ªØa chua",
        lunch: "C∆°m + Th·ªãt b√≤ x√†o b√¥ng c·∫£i + Canh rau ng√≥t",
        dinner: "Ph·ªü g√† + Ch√® ƒë·∫≠u xanh"
      },
      {
        day: "Th·ª© 4",
        breakfast: "Smoothie xo√†i chu·ªëi + B√°nh quy y·∫øn m·∫°ch",
        lunch: "C∆°m + C√° h·ªìi n∆∞·ªõng + S√∫p b√≠ ƒë·ªè",
        dinner: "B√∫n th·ªãt n∆∞·ªõng + N∆∞·ªõc √©p cam"
      },
      {
        day: "Th·ª© 5",
        breakfast: "Ch√°o t√¥m rau c·ªß",
        lunch: "C∆°m + G√† h·∫•p l√° chanh + Canh kh·ªï qua",
        dinner: "M√¨ √ù s·ªët c√† chua + Salad rau tr·ªôn"
      },
      {
        day: "Th·ª© 6",
        breakfast: "B√°nh flan + S·ªØa t∆∞∆°i",
        lunch: "C∆°m + Th·ªãt heo lu·ªôc + Canh c·∫£i th·∫£o",
        dinner: "Ch√°o c√° ch√©p + Rau lu·ªôc ch·∫•m n∆∞·ªõc m·∫Øm"
      },
      {
        day: "Th·ª© 7",
        breakfast: "Ch√® ƒë·∫≠u ƒëen + B√°nh m√¨ sandwich",
        lunch: "C∆°m + T√¥m rang me + Canh b√≠ ƒëao",
        dinner: "B√°nh canh cua + Ch·∫£ c√°"
      },
      {
        day: "Ch·ªß nh·∫≠t",
        breakfast: "Pancake chu·ªëi + M·∫≠t ong",
        lunch: "C∆°m + S∆∞·ªùn non kho + Rau lang lu·ªôc",
        dinner: "L·∫©u c√° + B√°nh tr√°ng n∆∞·ªõng"
      }
    ]
  };

  const getDayParam = (day: string) => {
    const dayMap: { [key: string]: string } = {
      "Th·ª© 2": "monday",
      "Th·ª© 3": "tuesday", 
      "Th·ª© 4": "wednesday",
      "Th·ª© 5": "thursday",
      "Th·ª© 6": "friday",
      "Th·ª© 7": "saturday",
      "Ch·ªß nh·∫≠t": "sunday"
    };
    return dayMap[day] || day;
  };

  const handleMealClick = (day: string, mealType: 'breakfast' | 'lunch' | 'dinner') => {
    navigate(`/meal-plans/${id}/${getDayParam(day)}/${mealType}`);
  };

  return (
    <StandardLayout>
        {/* Hero Section */}
        <section className="relative">
          <div className="aspect-video md:aspect-[21/9] overflow-hidden">
            <img 
              src={mealPlan.image} 
              alt={mealPlan.title}
              className="w-full h-full object-cover"
            />
            <div className="absolute inset-0 bg-black bg-opacity-40 flex items-end">
              <div className="max-w-6xl mx-auto p-6 text-white w-full">
                <div className="flex flex-wrap gap-2 mb-4">
                  {mealPlan.tags.map((tag) => (
                    <Badge key={tag} className="bg-orange-600 text-white">
                      {tag}
                    </Badge>
                  ))}
                </div>
                <h1 className="text-3xl md:text-5xl font-bold mb-4">
                  {mealPlan.title}
                </h1>
                <p className="text-lg md:text-xl max-w-3xl opacity-90">
                  {mealPlan.description}
                </p>
              </div>
            </div>
          </div>
        </section>

        {/* Quick Info */}
        <section className="py-8 px-4 bg-gray-50">
          <div className="max-w-6xl mx-auto">
            <div className="grid grid-cols-2 md:grid-cols-6 gap-4">
              <div className="flex items-center space-x-2">
                <Calendar className="h-5 w-5 text-orange-600" />
                <div>
                  <p className="text-sm text-gray-600">Th·ªùi gian</p>
                  <p className="font-semibold">{mealPlan.duration}</p>
                </div>
              </div>
              <div className="flex items-center space-x-2">
                <Users className="h-5 w-5 text-orange-600" />
                <div>
                  <p className="text-sm text-gray-600">Ph·ª•c v·ª•</p>
                  <p className="font-semibold">{mealPlan.servings}</p>
                </div>
              </div>
              <div className="flex items-center space-x-2">
                <DollarSign className="h-5 w-5 text-orange-600" />
                <div>
                  <p className="text-sm text-gray-600">Ng√¢n s√°ch</p>
                  <p className="font-semibold">{mealPlan.budget}</p>
                </div>
              </div>
              <div className="flex items-center space-x-2">
                <Heart className="h-5 w-5 text-orange-600" />
                <div>
                  <p className="text-sm text-gray-600">ƒê·ªô kh√≥</p>
                  <p className="font-semibold">{mealPlan.difficulty}</p>
                </div>
              </div>
              <div className="flex items-center space-x-2">
                <ChefHat className="h-5 w-5 text-orange-600" />
                <div>
                  <p className="text-sm text-gray-600">S·ªë m√≥n</p>
                  <p className="font-semibold">{mealPlan.meals} m√≥n</p>
                </div>
              </div>
              <div className="flex items-center space-x-2">
                <Clock className="h-5 w-5 text-orange-600" />
                <div>
                  <p className="text-sm text-gray-600">Th·ªùi gian n·∫•u</p>
                  <p className="font-semibold">{mealPlan.totalTime}</p>
                </div>
              </div>
            </div>
          </div>
        </section>

        {/* Main Content */}
        <section className="py-12 px-4">
          <div className="max-w-6xl mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8">
            {/* Left Column - Weekly Plan */}
            <div className="lg:col-span-2">
              <h2 className="text-2xl font-bold text-gray-900 mb-6">K·∫ø ho·∫°ch 7 ng√†y</h2>
              <div className="space-y-4">
                {mealPlan.weeklyPlan.map((day, index) => (
                  <Card key={index} className="overflow-hidden">
                    <CardHeader className="bg-orange-50">
                      <CardTitle className="text-lg font-semibold text-orange-800">
                        {day.day}
                      </CardTitle>
                    </CardHeader>
                    <CardContent className="p-4">
                      <div className="space-y-3">
                        <div>
                          <h4 className="font-medium text-gray-900 mb-1">üåÖ S√°ng</h4>
                          <p 
                            className="text-gray-600 hover:text-orange-600 cursor-pointer hover:underline"
                            onClick={() => handleMealClick(day.day, 'breakfast')}
                          >
                            {day.breakfast}
                          </p>
                        </div>
                        <div>
                          <h4 className="font-medium text-gray-900 mb-1">‚òÄÔ∏è Tr∆∞a</h4>
                          <p 
                            className="text-gray-600 hover:text-orange-600 cursor-pointer hover:underline"
                            onClick={() => handleMealClick(day.day, 'lunch')}
                          >
                            {day.lunch}
                          </p>
                        </div>
                        <div>
                          <h4 className="font-medium text-gray-900 mb-1">üåô T·ªëi</h4>
                          <p 
                            className="text-gray-600 hover:text-orange-600 cursor-pointer hover:underline"
                            onClick={() => handleMealClick(day.day, 'dinner')}
                          >
                            {day.dinner}
                          </p>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </div>

            {/* Right Column - Benefits & Actions */}
            <div className="space-y-6">
              {/* Rating & Author */}
              <Card>
                <CardContent className="p-6">
                  <div className="text-center mb-4">
                    <div className="flex items-center justify-center space-x-1 mb-2">
                      <span className="text-2xl font-bold text-orange-600">‚≠ê {mealPlan.rating}</span>
                    </div>
                    <p className="text-sm text-gray-600">ƒê∆∞·ª£c t·∫°o b·ªüi</p>
                    <p className="font-semibold">{mealPlan.author}</p>
                  </div>
                </CardContent>
              </Card>

              {/* Benefits */}
              <Card>
                <CardHeader>
                  <CardTitle className="text-lg font-semibold">L·ª£i √≠ch</CardTitle>
                </CardHeader>
                <CardContent>
                  <ul className="space-y-2">
                    {mealPlan.benefits.map((benefit, index) => (
                      <li key={index} className="flex items-start space-x-2">
                        <span className="text-green-600 mt-1">‚úì</span>
                        <span className="text-gray-700">{benefit}</span>
                      </li>
                    ))}
                  </ul>
                </CardContent>
              </Card>

              {/* Action Buttons */}
              <div className="space-y-3">
                <Button 
                  className="w-full bg-green-600 hover:bg-green-700 text-white h-12"
                  onClick={handleApplyMealPlan}
                >
                  √Åp d·ª•ng th·ª±c ƒë∆°n n√†y
                </Button>
                <Button variant="outline" className="w-full border-orange-600 text-orange-600 hover:bg-orange-50 h-12">
                  T·∫£i xu·ªëng PDF
                </Button>
                <Button variant="outline" className="w-full h-12">
                  Chia s·∫ª th·ª±c ƒë∆°n
                </Button>
              </div>
            </div>
          </div>
        </section>
    </StandardLayout>
  );
};

export default MealPlanDetailPage;
